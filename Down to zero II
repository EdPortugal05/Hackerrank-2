using System;
using System.Collections.Generic;

class Solution
{
    static int DownToZero(int n)
    {
        int[] dist = new int[n + 1];
        Queue<int> q = new();
        q.Enqueue(n);

        while (q.Count > 0)
        {
            int cur = q.Dequeue();
            if (cur == 0) return dist[cur];

            int next1 = cur - 1;
            if (next1 >= 0 && dist[next1] == 0)
            {
                dist[next1] = dist[cur] + 1;
                q.Enqueue(next1);
            }

            for (int i = 2; i * i <= cur; i++)
            {
                if (cur % i == 0)
                {
                    int next2 = Math.Max(i, cur / i);
                    if (dist[next2] == 0)
                    {
                        dist[next2] = dist[cur] + 1;
                        q.Enqueue(next2);
                    }
                }
            }
        }
        return 0;
    }

    static void Main()
    {
        int q = int.Parse(Console.ReadLine());
        for (int i = 0; i < q; i++)
        {
            int n = int.Parse(Console.ReadLine());
            Console.WriteLine(DownToZero(n));
        }
    }
}
